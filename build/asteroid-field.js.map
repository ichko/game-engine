{"version":3,"sources":["../src/asteroid-field.js"],"names":["App","define","Utils","Spawner","Polygon","Explosion","player","colors","numAsteroids","radius","alive","asteroids","range","size","random","position","randomAsteroidPosition","style","color","randomAsteroidColor","velocity","Vector","points","randomAsteroidShape","explosions","explosionSpawner","length","splice","copy","add","polar","Math","PI","segments","segment","randomArray","ctx","playerSpeed","forEach","asteroid","update","distance","kill","push","particleSize","magnitude","fire","renderer","render"],"mappings":"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","file":"asteroid-field.js","sourcesContent":["App.define(({ Utils, Spawner, Polygon, Explosion }) => class AsteroidField {\r\n\r\n    constructor(player, colors, numAsteroids, radius) {\r\n        this.alive = () => true;\r\n        this.radius = radius;\r\n        this.player = player;\r\n        this.colors = colors;\r\n        this.asteroids = Utils.range(numAsteroids, () => {\r\n            let size = Utils.random(20, 40);\r\n            return new Polygon({\r\n                position: this.randomAsteroidPosition(),\r\n                style: { color: this.randomAsteroidColor() },\r\n                velocity: Vector.random(-2, 2, -2, 2), size,\r\n                points: this.randomAsteroidShape()\r\n            });\r\n        });\r\n\r\n        this.explosions = [];\r\n        this.explosionSpawner = new Spawner(() => this.explosions.length > 0,\r\n            () => this.explosions.splice(0, this.explosions.length));\r\n    }\r\n\r\n    randomAsteroidPosition() {\r\n        return this.player.position.copy().add(Vector.polar(Utils.random(0, Math.PI * 2), this.radius / 2 + 20));\r\n    }\r\n\r\n    randomAsteroidShape() {\r\n        let segments = 8;\r\n        return Utils.range(segments, segment =>\r\n            Vector.polar((segment / segments) * Math.PI * 2, Utils.random(0.5, 1)));\r\n    }\r\n\r\n    randomAsteroidColor() {\r\n        return Utils.randomArray(this.colors);\r\n    }\r\n\r\n    update(ctx) {\r\n        let playerSpeed = this.player.velocity.length();\r\n        this.asteroids.forEach(asteroid => {\r\n            asteroid.update(ctx);\r\n            let distance = this.player.position.distance(asteroid.position);\r\n\r\n            if (distance < asteroid.size && this.player.size > 0) {\r\n                if (this.player.color != asteroid.style.color) {\r\n                    this.player.kill();\r\n                }\r\n                else {\r\n                    this.player.color = this.randomAsteroidColor();\r\n                    this.explosions.push(new Explosion({\r\n                        position: asteroid.position, size: asteroid.size / 1.5,\r\n                        particleSize: asteroid.size / 1.5, style: { color: asteroid.style.color },\r\n                        magnitude: (asteroid.size + playerSpeed + asteroid.velocity.length()) / 10\r\n                    }).fire());\r\n                }\r\n            }\r\n            if ((distance < asteroid.size || distance > this.radius / 2 + 50) && this.player.size > 0) {\r\n                asteroid.position = this.randomAsteroidPosition();\r\n                asteroid.points = this.randomAsteroidShape();\r\n                asteroid.style.color = this.randomAsteroidColor();\r\n            }\r\n        });\r\n\r\n        this.explosionSpawner.update(ctx);        \r\n    }\r\n\r\n    render(renderer) {\r\n        this.asteroids.forEach(asteroid => asteroid.render(renderer));\r\n        this.explosionSpawner.render(renderer);\r\n    }\r\n\r\n});\r\n"]}