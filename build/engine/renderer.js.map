{"version":3,"sources":["../../src/engine/renderer.js"],"names":["App","define","ctx","width","height","transformation","transformedRendering","push","pop","scale","Vector","rotation","translation","save","x","y","rotate","translate","restore","position","radius","color","opacity","fillStyle","globalAlpha","beginPath","arc","Math","PI","closePath","fill","size","fillRect","points","length","moveTo","forEach","lineTo","point"],"mappings":"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","file":"renderer.js","sourcesContent":["App.define(() => class CanvasRenderer {\r\n\r\n    constructor(ctx, width, height) {\r\n        this.ctx = ctx;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    transform(transformation, transformedRendering) {\r\n        this.push(transformation);\r\n        transformedRendering();\r\n        this.pop();\r\n    }\r\n\r\n    push({\r\n        scale = new Vector(1, 1),\r\n        rotation = 0,\r\n        translation = new Vector()\r\n    } = {}) {\r\n        this.ctx.save();\r\n        this.ctx.scale(scale.x, scale.y);\r\n        this.ctx.rotate(rotation);\r\n        this.ctx.translate(translation.x, translation.y);\r\n    }\r\n\r\n    pop() {\r\n        this.ctx.restore();\r\n    }\r\n\r\n    circle(position, radius, { color, opacity = 1 }) {\r\n        // this.ctx.shadowColor = color;\r\n        // this.ctx.shadowBlur = 50;\r\n\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.globalAlpha = opacity;\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(position.x, position.y, radius, 0, Math.PI * 2);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n    }\r\n\r\n    rectangle(position, size, { color }) {\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.fillRect(position.x - size.width / 2, position.y - size.height / 2, size.width, size.height);\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.fillStyle = \"rgba(0,0,0,1)\";\r\n        this.ctx.fillRect(-this.width / 2, -this.height / 2, this.width, this.height);\r\n    }\r\n\r\n    polygon(points, size = 1, { color }) {\r\n        if (points.length > 2) {\r\n            this.ctx.beginPath();\r\n            this.ctx.fillStyle = color;\r\n            this.ctx.moveTo(points[0].x * size, points[0].y * size);\r\n            points.forEach(point => {\r\n                this.ctx.lineTo(point.x * size, point.y * size);\r\n            });\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n\r\n});\r\n"]}