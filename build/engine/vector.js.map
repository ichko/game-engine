{"version":3,"sources":["../../src/engine/vector.js"],"names":["App","define","Utils","x","y","Math","sqrt","vector","length","angle","sin","cos","tmpX","atan2","size","noramlize","scale","dx","dy","Vector","minx","maxx","miny","maxy","random","minAngle","maxAngle","PI","polar"],"mappings":"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","file":"vector.js","sourcesContent":["App.define(({ Utils }) => class Vector {\r\n\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    noramlize() {\r\n        let length = this.length();\r\n        if (length !== 0) {\r\n            this.x /= length;\r\n            this.y /= length;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    rotate(angle) {\r\n        let [ sin, cos ] = [ Math.sin(angle), Math.cos(angle) ];\r\n        let tmpX = this.x;\r\n        this.x = this.x * cos - this.y * sin;\r\n        this.y = tmpX * sin + this.y * cos;\r\n\r\n        return this;\r\n    }\r\n\r\n    angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    scaleTo(size = 1) {\r\n        return this.noramlize().scale(size);\r\n    }\r\n\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    distance(vector) {\r\n        let dx = this.x - vector.x;\r\n        let dy = this.y - vector.y;\r\n\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    reverse() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    scale(size) {\r\n        this.x *= size;\r\n        this.y *= size;\r\n\r\n        return this;\r\n    }\r\n\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    vectorScale(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    static random(minx, maxx, miny, maxy) {\r\n        return new Vector(Utils.random(minx, maxx), Utils.random(miny, maxy));\r\n    }\r\n\r\n    static polar(angle = 0, length = 1) {\r\n        return new Vector(Math.cos(angle) * length, Math.sin(angle) * length);\r\n    }\r\n\r\n    static randomPolar(length = 1, minAngle = 0, maxAngle = Math.PI * 2) {\r\n        return Vector.polar(Utils.random(minAngle, maxAngle), length);\r\n    }\r\n\r\n});\r\n"]}