{"version":3,"sources":["../../src/engine/primitives.js"],"names":["App","define","GameObject","config","radius","renderer","circle","position","style","size","rectangle","items","offset","Vector","object","push","translation","scale","forEach","render","pop","ctx","update","damping","elasticity","target","dampingForce","velocity","copy","acceleration","subtract","add","Circle","Utils","InstancePool","particles","circlesPool","init","magnitude","color","particleSize","fromAngle","toAngle","Math","PI","concat","range","new","randomPolar","random","length","rotation","particle","dt","filter","alive","release","Explosion","fire","points","emissions","polygon","condition","creator","context","item"],"mappings":"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","file":"primitives.js","sourcesContent":["App.define(({ GameObject }) => class Circle extends GameObject {\r\n\r\n    set(config = {}) {\r\n        super.set(config);\r\n        this.radius = config.radius || 5;\r\n    }\r\n\r\n    render(renderer)  {\r\n        renderer.circle(this.position, this.radius, this.style);\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ GameObject }) => class Rectangle extends GameObject {\r\n\r\n    constructor(config = {}) {\r\n        super(config);\r\n        this.size = config.size;\r\n    }\r\n\r\n    render(renderer) {\r\n        renderer.rectangle(this.position, this.size, this.style);\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ GameObject }) => class Composite extends GameObject {\r\n\r\n    constructor(config = {}) {\r\n        super(config);\r\n        this.items = [];\r\n    }\r\n\r\n    add({ offset = new Vector(), object }) {\r\n        this.items.push({ object, offset });\r\n        return this;\r\n    }\r\n\r\n    render(renderer) {\r\n        renderer.push({\r\n            translation: this.position,\r\n            scale: new Vector(this.size, this.size)\r\n        });\r\n        this.items.forEach(({ object, offset }) => {\r\n            renderer.push({ translation: offset });\r\n            object.render(renderer);\r\n            renderer.pop();\r\n        });\r\n        renderer.pop();\r\n    }\r\n\r\n    update(ctx) {\r\n        super.update(ctx);\r\n        this.items.forEach(({ object }) => object.update(ctx));\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ GameObject }) => class SpringyVector extends GameObject {\r\n\r\n    constructor({\r\n        damping = 0.1,\r\n        elasticity = 0.1,\r\n        target = () => new Vector(),\r\n        position = new Vector()\r\n    } = {}) {\r\n        super({ position });\r\n        this.target = target;\r\n        this.elasticity = elasticity;\r\n        this.damping = damping;\r\n    }\r\n\r\n    updateVelocity() {\r\n        let dampingForce = this.velocity.copy().scale(this.damping);\r\n        let acceleration = this.target()\r\n            .copy()\r\n            .subtract(this.position)\r\n            .scale(this.elasticity)\r\n            .subtract(dampingForce);\r\n\r\n        this.velocity.add(acceleration);\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ GameObject, Circle, Utils, InstancePool }) => class Explosion extends GameObject {\r\n\r\n    constructor(config) {\r\n        super(config);\r\n        this.particles = [];\r\n        this.position = [];\r\n        this.config = config;\r\n        this.circlesPool = new InstancePool(Circle);\r\n    }\r\n\r\n    fire() {\r\n        this.init(this.config);\r\n        return this;\r\n    }\r\n\r\n    init({\r\n        size = 2,\r\n        magnitude = 10,\r\n        style = { color: \"#f00\" },\r\n        particleSize = 20,\r\n        position = new Vector(),\r\n        fromAngle = 0,\r\n        toAngle = Math.PI * 2,\r\n    } = {}) {\r\n        this.particles = this.particles.concat(Utils.range(size, () => this.circlesPool.new({\r\n            style, position: position.copy(), radius: particleSize,\r\n            velocity: Vector.randomPolar(1, fromAngle, toAngle)\r\n                .scale(Utils.random(magnitude / 2, magnitude))\r\n        })));\r\n    }\r\n\r\n    alive() {\r\n        return this.particles.length > 0;\r\n    }\r\n\r\n    render(renderer) {\r\n        renderer.push({ rotation: this.rotation })\r\n        this.particles.forEach(particle => particle.render(renderer));\r\n        renderer.pop();\r\n    }\r\n\r\n    update(dt) {\r\n        this.particles = this.particles.filter(particle => {\r\n            particle.radius /= Utils.random(1.05, 1.1);\r\n            particle.update(dt)\r\n\r\n            let alive = particle.radius > 0.5;\r\n            if (!alive) {\r\n                this.circlesPool.release(particle);\r\n            }\r\n\r\n            return alive;\r\n        });\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ Explosion }) => class Fountain extends Explosion {\r\n\r\n    constructor(config) {\r\n        super(config);\r\n    }\r\n\r\n    update(dt) {\r\n        this.fire();\r\n        super.update(dt);\r\n    }\r\n\r\n});\r\n\r\nApp.define(({ GameObject, Explosion }) => class Polygon extends GameObject {\r\n\r\n    constructor(config = {}) {\r\n        super(config);\r\n        this.points = config.points || [];\r\n        this.emissions = [];\r\n    }\r\n\r\n    render(renderer) {\r\n        renderer.push({ translation: this.position, rotation: this.rotation });\r\n        renderer.polygon(this.points, this.size, this.style);\r\n        renderer.pop();\r\n    }\r\n\r\n});\r\n\r\nApp.define(() => class Spawner {\r\n\r\n    constructor(condition = (() => false), creator = (() => [])) {\r\n        this.creator = creator;\r\n        this.condition = condition;\r\n        this.items = [];\r\n    }\r\n\r\n    update(context) {\r\n        if (this.condition(this.items.length)) {\r\n            this.items.push(...this.creator())\r\n        }\r\n\r\n        this.items = this.items.filter(item => {\r\n            item.update(context);\r\n            return item.alive();\r\n        });\r\n    }\r\n\r\n    render(renderer) {\r\n        this.items.forEach(item => item.render(renderer)); \r\n    }\r\n\r\n    alive() {\r\n        return true;\r\n    }\r\n\r\n});\r\n"]}