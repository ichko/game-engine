{"version":3,"sources":["../../src/engine/app.js"],"names":["App","definitions","container","forEach","single","executor","cls","name","push","global","dependencies","dependency"],"mappings":";;;;;;AAAA,IAAIA,MAAM;AAEN,mBAAc;AAAA;;AACV,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,SAAL,GAAiB,EAAjB;AACH;;AALK;AAAA;AAAA,+BAOC;AAAA;;AACH,iBAAKD,WAAL,CAAiBE,OAAjB,CAAyB,gBAA0B;AAAA,oBAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,oBAAfC,QAAe,QAAfA,QAAe;;AAC/C,oBAAIC,MAAMD,SAAS,MAAKH,SAAd,CAAV;AACA,oBAAIK,OAAOD,IAAIC,IAAf;AACAD,sBAAOF,SAAS,IAAIE,GAAJ,EAAT,GAAqBA,GAA5B;AACA,sBAAKJ,SAAL,CAAeK,IAAf,IAAuBD,GAAvB;AACH,aALD;;AAOA,mBAAO,IAAP;AACH;AAhBK;AAAA;AAAA,8BAkBA;AACF,mBAAO,KAAKJ,SAAZ;AACH;AApBK;AAAA;AAAA,qCAsBOG,QAtBP,EAsBiB;AACnB,iBAAKJ,WAAL,CAAiBO,IAAjB,CAAsB,EAAEJ,QAAQ,IAAV,EAAgBC,kBAAhB,EAAtB;AACA,mBAAO,IAAP;AACH;AAzBK;AAAA;AAAA,+BA2BCA,QA3BD,EA2BW;AACb,iBAAKJ,WAAL,CAAiBO,IAAjB,CAAsB,EAAEJ,QAAQ,KAAV,EAAiBC,kBAAjB,EAAtB;AACA,mBAAO,IAAP;AACH;AA9BK;AAAA;AAAA,8BAgCAI,MAhCA,EAgCQ;AACV,iBAAK,IAAIF,IAAT,IAAiB,KAAKL,SAAtB,EAAiC;AAC7BO,uBAAOF,IAAP,IAAe,KAAKL,SAAL,CAAeK,IAAf,CAAf;AACH;;AAED,mBAAO,IAAP;AACH;AAtCK;AAAA;AAAA,8BAwCyB;AAAA;;AAAA,gBAA3BG,YAA2B,uEAAZ,EAAY;AAAA,gBAARD,MAAQ;;AAC3BC,yBAAaP,OAAb,CAAqB;AAAA,uBAAcM,OAAOE,UAAP,IAAqB,OAAKV,WAAL,CAAiBU,UAAjB,CAAnC;AAAA,aAArB;AACA,mBAAO,IAAP;AACH;AA3CK;;AAAA;AAAA,MAAV","file":"app.js","sourcesContent":["let App = new class App {\r\n\r\n    constructor() {\r\n        this.definitions = [];\r\n        this.container = {};\r\n    }\r\n\r\n    load() {\r\n        this.definitions.forEach(({ single, executor }) => {\r\n            let cls = executor(this.container);\r\n            let name = cls.name;\r\n            cls = (single ? new cls() : cls);\r\n            this.container[name] = cls;\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    get() {\r\n        return this.container;\r\n    }\r\n\r\n    defineSingle(executor) {\r\n        this.definitions.push({ single: true, executor });\r\n        return this;\r\n    }\r\n\r\n    define(executor) {\r\n        this.definitions.push({ single: false, executor });\r\n        return this;\r\n    }\r\n\r\n    useIn(global) {\r\n        for (let name in this.container) {\r\n            global[name] = this.container[name];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    use(dependencies = [], global) {\r\n        dependencies.forEach(dependency => global[dependency] = this.definitions[dependency]);\r\n        return this;\r\n    }\r\n\r\n}\r\n"]}